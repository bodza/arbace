include JdkNativeCompilation.gmk

GLOBAL_VERSION_INFO_RESOURCE := $(TOPDIR)/src/java.base/windows/native/common/version.rc

# Absolute paths to lib files on windows for use in LIBS. Should figure out a more
# elegant solution to this.
WIN_JAVA_LIB := $(SUPPORT_OUTPUTDIR)/native/java.base/libjava/java.lib

# Tell the compiler not to export any functions unless declared so in
# the source code. On Windows, this is the default and cannot be changed.
# On Mac, we have always exported all symbols, probably due to oversight
# and/or misunderstanding. To emulate this, don't hide any symbols
# by default.
# On AIX/xlc we need at least xlc 13.1 for the symbol hiding (see JDK-8214063)
# Also provide an override for non-conformant libraries.
ifeq ($(TOOLCHAIN_TYPE), gcc)
  CFLAGS_JDKLIB += -fvisibility=hidden
  CXXFLAGS_JDKLIB += -fvisibility=hidden
  LDFLAGS_JDKLIB += -Wl,--exclude-libs,ALL
  EXPORT_ALL_SYMBOLS := -fvisibility=default
else ifeq ($(TOOLCHAIN_TYPE), clang)
  ifneq ($(OPENJDK_TARGET_OS), macosx)
    CFLAGS_JDKLIB += -fvisibility=hidden
    CXXFLAGS_JDKLIB += -fvisibility=hidden
    EXPORT_ALL_SYMBOLS := -fvisibility=default
  endif
else ifeq ($(TOOLCHAIN_TYPE), solstudio)
  CFLAGS_JDKLIB += -xldscope=hidden
  CXXFLAGS_JDKLIB += -xldscope=hidden
  EXPORT_ALL_SYMBOLS := -xldscope=global
endif

################################################################################
# Find a library
# Param 1 - module name
# Param 2 - library name
# Param 3 - optional subdir for library
FindLib = \
    $(call FindLibDirForModule, \
        $(strip $1))$(strip $3)/$(LIBRARY_PREFIX)$(strip $2)$(SHARED_LIBRARY_SUFFIX)

################################################################################
# Find a static library
# Param 1 - module name
# Param 2 - library name
# Param 3 - optional subdir for library
FindStaticLib = \
    $(addprefix $(SUPPORT_OUTPUTDIR)/native/, \
        $(strip $1)$(strip $3)/$(LIBRARY_PREFIX)$(strip $2)$(STATIC_LIBRARY_SUFFIX))

# Put the libraries here.
INSTALL_LIBRARIES_HERE := $(call FindLibDirForModule, $(MODULE))
